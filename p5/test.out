bool testBool;
int a;
struct S{
    int b;
    bool c;
    int r;
};

struct S t;
int add(int a, int b) {
    return (a(int) + b(int));
}

void doNothing() {
    int r;
    bool alwaysTrue;
    bool alwaysFalse;
    alwaysTrue(bool) = true;
    r(int) = 5;
    while (alwaysTrue(bool)) {
        repeat (r(int)) {
        }
    }
    r(int) = add(int,int->int)(r(int), r(int));
    if ((alwaysTrue(bool) && alwaysTrue(bool))) {
        repeat (r(int)) {
            alwaysTrue(bool) = false;
        }
    }
    else {
        cout << "string";
    }
    if ((!alwaysFalse(bool))) {
    }
    t(S).b(int) = 3;
    t(S).r(int) = (add(int,int->int)(t(S).b(int), t(S).b(int)) + 2);
    if ((t(S).c(bool) == true)) {
    }
    if ((3 == 2)) {
    }
    testBool(bool) = (3 < 2);
    if ((3 > 2)) {
    }
    if ((3 >= 2)) {
    }
    if ((3 <= 2)) {
    }
    if ((3 != 2)) {
    }
    cin >> r(int);
    cin >> alwaysTrue(bool);
    cout << t(S).b(int);
    cout << t(S).c(bool);
    cout << "string";
}

